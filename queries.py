import json


class Queries(object):

    @classmethod
    def read_user_id(cls):
        return json.dumps({"operationName":"ReadUserId","variables":{},"query":"query ReadUserId {\n  readUser {\n    ... on UserErrorResponse {\n      errorMessages\n      __typename\n    }\n    ... on User {\n      id\n      __typename\n    }\n    __typename\n  }\n}\n"})
    
    @classmethod
    def open_stock_trades(cls):
        return json.dumps({"operationName":"PendingStockTrades","variables":{"portfolioId":"10042674","holdingType":"STOCKS"},"query":"query PendingStockTrades($portfolioId: String!, $holdingType: HoldingType!) {\n  readPortfolio(portfolioId: $portfolioId) {\n    ... on PortfolioErrorResponse {\n      errorMessages\n      __typename\n    }\n    ... on Portfolio {\n      holdings(type: $holdingType) {\n        ... on CategorizedStockHoldings {\n          pendingTrades {\n            stock {\n              ... on Stock {\n                description\n                technical {\n                  lastPrice\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            symbol\n            transactionTypeDescription\n            orderPriceDescription\n            tradeId\n            action\n            cancelDate\n            quantity\n            quantityType\n            transactionType\n            limit {\n              limit\n              stop\n              trailingStop {\n                percentage\n                price\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on HoldingsErrorResponse {\n          errorMessages\n          __typename\n        }\n        ... on CategorizedHoldingsErrorResponse {\n          errorMessages\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n"})
    
    @classmethod
    def open_option_trades(cls):
        return json.dumps({"operationName":"PendingOptionTrades","variables":{"portfolioId":"10042674","holdingType":"OPTIONS"},"query":"query PendingOptionTrades($portfolioId: String!) {\n  readPortfolio(portfolioId: $portfolioId) {\n    ... on PortfolioErrorResponse {\n      errorMessages\n      __typename\n    }\n    ... on Portfolio {\n      holdings(type: OPTIONS) {\n        ... on HoldingsErrorResponse {\n          errorMessages\n          __typename\n        }\n        ... on CategorizedHoldingsErrorResponse {\n          errorMessages\n          __typename\n        }\n        ... on CategorizedOptionHoldings {\n          pendingTrades {\n            option {\n              ... on Option {\n                isPut\n                expirationDate\n                lastPrice\n                strikePrice\n                stock {\n                  ... on Stock {\n                    symbol\n                    technical {\n                      lastPrice\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            symbol\n            transactionTypeDescription\n            orderPriceDescription\n            tradeId\n            action\n            cancelDate\n            quantity\n            quantityType\n            transactionType\n            limit {\n              limit\n              stop\n              trailingStop {\n                percentage\n                price\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n"})
    
    @classmethod
    def open_short_trades(cls):
        return json.dumps({"operationName":"PendingStockTrades","variables":{"portfolioId":"10042674","holdingType":"SHORTS"},"query":"query PendingStockTrades($portfolioId: String!, $holdingType: HoldingType!) {\n  readPortfolio(portfolioId: $portfolioId) {\n    ... on PortfolioErrorResponse {\n      errorMessages\n      __typename\n    }\n    ... on Portfolio {\n      holdings(type: $holdingType) {\n        ... on CategorizedStockHoldings {\n          pendingTrades {\n            stock {\n              ... on Stock {\n                description\n                technical {\n                  lastPrice\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            symbol\n            transactionTypeDescription\n            orderPriceDescription\n            tradeId\n            action\n            cancelDate\n            quantity\n            quantityType\n            transactionType\n            limit {\n              limit\n              stop\n              trailingStop {\n                percentage\n                price\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on HoldingsErrorResponse {\n          errorMessages\n          __typename\n        }\n        ... on CategorizedHoldingsErrorResponse {\n          errorMessages\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n"})
    
    @classmethod
    def cancel_order(cls,order_id):
        return json.dumps({"operationName":"CancelTrade","variables":{"input":order_id},"query":"mutation CancelTrade($input: String!) {\n  submitCancelTrade(tradeId: $input) {\n    ... on CancelTradeErrorResponse {\n      errorMessages\n      __typename\n    }\n    __typename\n  }\n}\n"}
)